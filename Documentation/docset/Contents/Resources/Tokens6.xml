<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AFPropertyListRequestOperation.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AFPropertyListRequestOperation</TokenIdentifier>
			<Abstract type="html">AFPropertyListRequestOperation is a subclass of AFHTTPRequestOperation for downloading and deserializing objects with property list (plist) response data.</Abstract>
			<DeclaredIn>AFPropertyListRequestOperation.h</DeclaredIn>
			
			<NodeRef refid="6"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AFPropertyListRequestOperation/setResponsePropertyList:</TokenIdentifier>
			<Abstract type="html">An object deserialized from a plist constructed using the response data.</Abstract>
			<DeclaredIn>AFPropertyListRequestOperation.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic) id responsePropertyList</Declaration>
			
			
			<Anchor>//api/name/responsePropertyList</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AFPropertyListRequestOperation/responsePropertyList</TokenIdentifier>
			<Abstract type="html">An object deserialized from a plist constructed using the response data.</Abstract>
			<DeclaredIn>AFPropertyListRequestOperation.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic) id responsePropertyList</Declaration>
			
			
			<Anchor>//api/name/responsePropertyList</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AFPropertyListRequestOperation/setPropertyListReadOptions:</TokenIdentifier>
			<Abstract type="html">One of the NSPropertyListMutabilityOptions options, specifying the mutability of objects deserialized from the property list. By default, this is NSPropertyListImmutable.</Abstract>
			<DeclaredIn>AFPropertyListRequestOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) NSPropertyListReadOptions propertyListReadOptions</Declaration>
			
			
			<Anchor>//api/name/propertyListReadOptions</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AFPropertyListRequestOperation/propertyListReadOptions</TokenIdentifier>
			<Abstract type="html">One of the NSPropertyListMutabilityOptions options, specifying the mutability of objects deserialized from the property list. By default, this is NSPropertyListImmutable.</Abstract>
			<DeclaredIn>AFPropertyListRequestOperation.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) NSPropertyListReadOptions propertyListReadOptions</Declaration>
			
			
			<Anchor>//api/name/propertyListReadOptions</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AFPropertyListRequestOperation/propertyListRequestOperationWithRequest:success:failure:</TokenIdentifier>
			<Abstract type="html">Creates and returns an AFPropertyListRequestOperation object and sets the specified success and failure callbacks.</Abstract>
			<DeclaredIn>AFPropertyListRequestOperation.h</DeclaredIn>			
			
			<Declaration>+ (instancetype)propertyListRequestOperationWithRequest:(NSURLRequest *)urlRequest success:(void ( ^ ) ( NSURLRequest *request , NSHTTPURLResponse *response , id propertyList ))success failure:(void ( ^ ) ( NSURLRequest *request , NSHTTPURLResponse *response , NSError *error , id propertyList ))failure</Declaration>
			<Parameters>
				<Parameter>
					<Name>urlRequest</Name>
					<Abstract type="html">The request object to be loaded asynchronously during execution of the operation</Abstract>
				</Parameter><Parameter>
					<Name>success</Name>
					<Abstract type="html">A block object to be executed when the operation finishes successfully. This block has no return value and takes three arguments: the request sent from the client, the response received from the server, and the object deserialized from a plist constructed using the response data.</Abstract>
				</Parameter><Parameter>
					<Name>failure</Name>
					<Abstract type="html">A block object to be executed when the operation finishes unsuccessfully, or that finishes successfully, but encountered an error while deserializing the object from a property list. This block has no return value and takes three arguments: the request sent from the client, the response received from the server, and the error describing the network or parsing error that occurred.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A new property list request operation</Abstract></ReturnValue>
			<Anchor>//api/name/propertyListRequestOperationWithRequest:success:failure:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AFPropertyListRequestOperation/initWithRequest:</TokenIdentifier>
			<Abstract type="html">Initializes and returns a newly allocated operation object with a url connection configured with the specified url request.</Abstract>
			<DeclaredIn>AFPropertyListRequestOperation.m</DeclaredIn>			
			
			<Declaration>- (id)initWithRequest:(NSURLRequest *)urlRequest</Declaration>
			<Parameters>
				<Parameter>
					<Name>urlRequest</Name>
					<Abstract type="html">The request object to be used by the operation connection.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithRequest:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AFPropertyListRequestOperation/error</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>AFPropertyListRequestOperation.m</DeclaredIn>			
			
			<Declaration>- (NSError *)error</Declaration>
			
			
			<Anchor>//api/name/error</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AFPropertyListRequestOperation/acceptableContentTypes</TokenIdentifier>
			<Abstract type="html">Returns an NSSet object containing the acceptable MIME types. When non-nil, the operation will set the error property to an error in AFErrorDomain. See http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.17</Abstract>
			<DeclaredIn>AFPropertyListRequestOperation.m</DeclaredIn>			
			
			<Declaration>+ (NSSet *)acceptableContentTypes</Declaration>
			
			
			<Anchor>//api/name/acceptableContentTypes</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AFPropertyListRequestOperation/canProcessRequest:</TokenIdentifier>
			<Abstract type="html">A Boolean value determining whether or not the class can process the specified request. For example, AFJSONRequestOperation may check to make sure the content type was application/json or the URL path extension was .json.</Abstract>
			<DeclaredIn>AFPropertyListRequestOperation.m</DeclaredIn>			
			
			<Declaration>+ (BOOL)canProcessRequest:(NSURLRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>urlRequest</Name>
					<Abstract type="html">The request that is determined to be supported or not supported for this class.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/canProcessRequest:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AFPropertyListRequestOperation/setCompletionBlockWithSuccess:failure:</TokenIdentifier>
			<Abstract type="html">Sets the completionBlock property with a block that executes either the specified success or failure block, depending on the state of the request on completion. If error returns a value, which can be caused by an unacceptable status code or content type, then failure is executed. Otherwise, success is executed.</Abstract>
			<DeclaredIn>AFPropertyListRequestOperation.m</DeclaredIn>			
			
			<Declaration>- (void)setCompletionBlockWithSuccess:(void ( ^ ) ( AFHTTPRequestOperation *operation , id responseObject ))success failure:(void ( ^ ) ( AFHTTPRequestOperation *operation , NSError *error ))failure</Declaration>
			<Parameters>
				<Parameter>
					<Name>success</Name>
					<Abstract type="html">The block to be executed on the completion of a successful request. This block has no return value and takes two arguments: the receiver operation and the object constructed from the response data of the request.</Abstract>
				</Parameter><Parameter>
					<Name>failure</Name>
					<Abstract type="html">The block to be executed on the completion of an unsuccessful request. This block has no return value and takes two arguments: the receiver operation and the error that occurred during the request.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setCompletionBlockWithSuccess:failure:</Anchor>
		</Token>
		
	</File>
</Tokens>