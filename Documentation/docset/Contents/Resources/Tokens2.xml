<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/ANObject.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/ANObject</TokenIdentifier>
			<Abstract type="html">ANObject is the primary interface used for inspection and modification of remote objects.</Abstract>
			<DeclaredIn>ANObject.h</DeclaredIn>
			
			<NodeRef refid="2"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/ANObject/objectWithType:</TokenIdentifier>
			<Abstract type="html">Initialize a new ANObject with an object type.</Abstract>
			<DeclaredIn>ANObject.h</DeclaredIn>			
			
			<Declaration>+ (ANObject *)objectWithType:(NSString *)type</Declaration>
			<Parameters>
				<Parameter>
					<Name>type</Name>
					<Abstract type="html">The object type</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An empty ANObject, initialized with the specified type</Abstract></ReturnValue>
			<Anchor>//api/name/objectWithType:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/ANObject/objectWithType:objectId:</TokenIdentifier>
			<Abstract type="html">Initialize a new object with an object type and objectId</Abstract>
			<DeclaredIn>ANObject.h</DeclaredIn>			
			
			<Declaration>+ (ANObject *)objectWithType:(NSString *)type objectId:(NSNumber *)objectId</Declaration>
			<Parameters>
				<Parameter>
					<Name>type</Name>
					<Abstract type="html">The object type</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An empty ANObject, initialized with the specified type and objectId</Abstract></ReturnValue>
			<Anchor>//api/name/objectWithType:objectId:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ANObject/setObjectId:</TokenIdentifier>
			<Abstract type="html">Returns the objectId</Abstract>
			<DeclaredIn>ANObject.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong, readonly) NSNumber *objectId</Declaration>
			
			
			<Anchor>//api/name/objectId</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ANObject/objectId</TokenIdentifier>
			<Abstract type="html">Returns the objectId</Abstract>
			<DeclaredIn>ANObject.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong, readonly) NSNumber *objectId</Declaration>
			
			
			<Anchor>//api/name/objectId</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ANObject/setObject:forKey:</TokenIdentifier>
			<Abstract type="html">Sets an object for an attribute with name key</Abstract>
			<DeclaredIn>ANObject.h</DeclaredIn>			
			
			<Declaration>- (void)setObject:(id)object forKey:(NSString *)key</Declaration>
			<Parameters>
				<Parameter>
					<Name>object</Name>
					<Abstract type="html">The value to set</Abstract>
				</Parameter><Parameter>
					<Name>key</Name>
					<Abstract type="html">The name of the attribute</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setObject:forKey:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ANObject/removeObjectForKey:</TokenIdentifier>
			<Abstract type="html">Clears an attribute</Abstract>
			<DeclaredIn>ANObject.h</DeclaredIn>			
			
			<Declaration>- (void)removeObjectForKey:(NSString *)key</Declaration>
			<Parameters>
				<Parameter>
					<Name>key</Name>
					<Abstract type="html">The name of the attribute to clear</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/removeObjectForKey:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ANObject/queryForRelationshipNamed:type:</TokenIdentifier>
			<Abstract type="html">Returns an ANQuery initalized with a releationship that exists on the object instance.</Abstract>
			<DeclaredIn>ANObject.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/clm/ANQuery/queryWithType:belongingToType:throughRelationshipNamed:withObjectId:</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (ANQuery *)queryForRelationshipNamed:(NSString *)relationshipName type:(NSString *)type</Declaration>
			<Parameters>
				<Parameter>
					<Name>relationshipName</Name>
					<Abstract type="html">The name of the has-many relationship</Abstract>
				</Parameter><Parameter>
					<Name>type</Name>
					<Abstract type="html">The object type to be returned from the relationship</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An ANQuery initialized to return objects through the specified relationshipName</Abstract></ReturnValue>
			<Anchor>//api/name/queryForRelationshipNamed:type:</Anchor>
		</Token>
		
	</File>
</Tokens>